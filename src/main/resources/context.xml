<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
   
	<context:annotation-config />
	<!-- Activate annotations and set the packages where scan to look for spring beans	 -->
    
	<context:component-scan base-package="com.accion.tms" />  
    
	<!--
		DATABASE SETUP 
	 -->	
	<bean id="dataBaseInitializer" class="com.accion.tms.repository.DataBaseInitializer" init-method="initDataBase">
		
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--
		INIT REST COMPONENTS 
	
	
	<context:component-scan base-package="net.dontdrinkandroot.example.angularrestspringsecurity.rest.resources" /> -->
	
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	
	<!-- 
		SPRING SECURITY SETUP
	-->
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="mongoUserDetailsService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
    <property name="decisionVoters">
      <bean class="org.springframework.security.access.vote.RoleVoter" />
    </property>
    <property name="allowIfAllAbstainDecisions" value="false" />
    <property name="messageSource" ref="messageSource" />
  	</bean>

  <security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled" pre-post-annotations="enabled"
    access-decision-manager-ref="accessDecisionManager" />

	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
		<security:intercept-url method="GET" pattern="/rest/news/**" access="hasRole('user')" />
		<security:intercept-url method="PUT" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="POST" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="DELETE" pattern="/rest/news/**" access="hasRole('admin')" />
	</security:http>
    <bean id="authenticationTokenProcessingFilter" class="com.accion.tms.rest.AuthenticationTokenProcessingFilter"></bean>
	<bean id="unauthorizedEntryPoint" class="com.accion.tms.rest.UnauthorizedEntryPoint"></bean>
 <import resource="backupmongo-configforcloudrchs.xml"/>
</beans>